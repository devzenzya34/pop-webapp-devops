pipeline {
    agent any
    environment {
        DOCKERFILE_NAME = "Dockerfile"
        DOCKER_DIR = "./webapp"
        DOCKER_IMAGE = "pop-webapp"
        DOCKER_TAG = "1.1"
        DOCKERHUB_ID = "devzenzya34"
        DOCKERHUB_PASSWORD = credentials('dockerhub_password')
        PORT_APP = "8080"
        PORT_EXT = "8090"
        IP = "172.17.0.1" //defalut docker ip on linux
    }
    stages {
        stage('Build Image') {
            steps {
                script {
                    sh '''
                        ${DOCKER_DIR}/${DOCKERFILE_NAME} -t ${DOCKERHUB_ID}/${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_DIR}/.
                    '''
                }
            }
        }
        // test if image is built
        stage('RUN and TEST') {
            steps {
                script {
                    sh '''
                    docker ps -a | grep -i ${DOCKER_IMAGE} && docker rm -f  ${DOCKER_IMAGE}
                        docker run --name ${DOCKER_IMAGE} -dp $PORT_EXT:$PORT_APP ${DOCKERHUB_ID}/${DOCKER_IMAGE}:${DOCKER_TAG}
                        sleep 10
                        curl -I http://$IP:$PORT_EXT | grep -i "200"
                    '''
                    }
                }
            }
        }
        stage('Stop and Delete Container') {
            steps{
                script {
                    sh '''
                        docker ps -a | grep -i ${DOCKER_IMAGE} && docker rm -f  ${DOCKER_IMAGE}
                    '''
                }
            }
        }
        stage('Login and Push Image'){
            steps{
                script {
                    // Dockerhub Registry
                    sh '''
                        echo $DOCKERHUB_PASSWORD | docker login -u ${DOCKERHUB_ID} --password-stdin
                        docker push ${DOCKERHUB_ID}/${DOCKER_IMAGE}:${DOCKER_TAG}
                    '''
                    // Github Registry
                    // sh '''
                    //     echo $DOCKERHUB_PASSWORD | docker login ghcr.io -u $DOCKERHUB_ID --password-stdin
                    // '''
                }
            }
        }
    }
}
